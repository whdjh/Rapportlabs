---
alwaysApply: true
---
# Falling Game - Core Development Rules

## 🎯 **CRITICAL RULES - ALWAYS FOLLOW**

### **Mobile Architecture**
- **ALWAYS** use 480px max-width container
- **ALWAYS** use `MobileContainer` from [MobileLayoutContainer.tsx](mdc:src/components/MobileLayoutContainer.tsx)
- **NEVER** exceed 480px width

### **Performance**
- **NEVER** enable React Strict Mode (disabled in [next.config.ts](mdc:next.config.ts))
- **ALWAYS** use `draggable={false}` for images
- **ALWAYS** use `user-select: none` for game elements

### **TypeScript**
- **MUST** define interfaces for all props
- **NEVER** use `any` type
- **ALWAYS** use proper typing

### **Naming**
- Components: PascalCase (`MobileContainer`)
- Functions/Variables: camelCase (`useInnerSize`)
- Constants: UPPER_SNAKE_CASE (`BG_HEIGHT`)

## 🚫 **NEVER DO THESE**

- ❌ Use CSS-in-JS libraries
- ❌ Create components > 480px width
- ❌ Use `position: fixed`
- ❌ Enable React Strict Mode
- ❌ Use `window` directly (use `useInnerSize`)
- ❌ Use `useEffect` without dependencies
- ❌ Use `any` type

## 📁 **Project Structure**

```
src/
├── components/     # Reusable components
├── pages/         # Next.js pages
├── styles/        # CSS files
└── utils/         # Custom hooks
```

## 🎮 **Game Development**

### **Game Metrics**
```typescript
const METRIC = {
    BG_HEIGHT: 5000,
    APPLE_HEIGHT: 50,
}
```

### **Game Elements**
- **ALWAYS** use `position: absolute`
- **ALWAYS** use pixel values
- **NEVER** use percentage positioning

### **Assets**
- **ALWAYS** place in `public/` directory
- **MUST** optimize large images (background.png is 919KB)
- **ALWAYS** use relative paths: `/background.png`

## 🎨 **Styling**

### **Priority Order**
1. Inline styles (dynamic elements)
2. CSS Modules (component-specific)
3. Global CSS (base styles)

### **Colors**
```css
--game-red: #EC083F;      /* Finish line */
--game-bg: #e2e2e8;       /* Background */
--game-white: #ffffff;     /* Container */
```

### **Mobile CSS**
```css
user-select: none;
-webkit-touch-callout: none;
-webkit-font-smoothing: antialiased;
```

## 🔧 **Component Pattern**

```typescript
interface Props {
    children?: ReactNode
}

export const ComponentName = (props: Props) => {
    const { children } = props
    
    return (
        <div style={{ /* inline styles */ }}>
            {children}
        </div>
    )
}
```

## 📱 **Mobile Hooks**

```typescript
const { innerHeight, innerWidth } = useInnerSize()
const [ref, { width }] = useMeasure<HTMLDivElement>()
```

## 📋 **Checklist**

- [ ] Width ≤ 480px
- [ ] MobileContainer wrapper
- [ ] TypeScript strict compliance
- [ ] No React Strict Mode
- [ ] Images optimized
- [ ] Proper naming
- [ ] Touch-friendly (44px min)
- [ ] Performance optimized

## 🎯 **Success Metrics**

- Mobile-first design
- 60fps performance
- Type-safe code
- Optimized assets
- Touch-friendly UX
